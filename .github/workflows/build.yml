name: Build Desktop Apps

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win
          - os: ubuntu-latest
            platform: linux
          # Mac build disabled temporarily due to dmg-license dependency issue
          # - os: macos-latest
          #   platform: mac

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build app
      run: |
        # First build the renderer and main process
        npm run build
        # Then build platform-specific packages
        if [ "${{ matrix.platform }}" = "win" ]; then
          npx electron-builder --win
        elif [ "${{ matrix.platform }}" = "mac" ]; then
          npx electron-builder --mac
        else
          npx electron-builder --linux
        fi
      shell: bash

    - name: Upload Windows artifact
      if: matrix.platform == 'win'
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: |
          dist/*.exe
          dist/win-unpacked/

    - name: Upload Mac artifact
      if: matrix.platform == 'mac'
      uses: actions/upload-artifact@v4
      with:
        name: mac-app
        path: |
          dist/*.dmg
          dist/mac/

    - name: Upload Linux artifact
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: linux-app
        path: |
          dist/*.AppImage
          dist/linux-unpacked/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-app/dist/*.exe
          mac-app/dist/*.dmg
          linux-app/dist/*.AppImage
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}